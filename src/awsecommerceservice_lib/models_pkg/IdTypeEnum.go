/*
 * awsecommerceservice_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for IdTypeEnum enum
 */
type IdTypeEnum int

/**
 * Value collection for IdTypeEnum enum
 */
const (
    IdType_ASIN IdTypeEnum = 1 + iota
    IdType_UPC
    IdType_SKU
    IdType_EAN
    IdType_ISBN
)

func (r IdTypeEnum) MarshalJSON() ([]byte, error) { 
    s := IdTypeEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *IdTypeEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  IdTypeEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts IdTypeEnum to its string representation
 */
func IdTypeEnumToValue(idTypeEnum IdTypeEnum) string {
    switch idTypeEnum {
        case IdType_ASIN:
    		return "ASIN"		
        case IdType_UPC:
    		return "UPC"		
        case IdType_SKU:
    		return "SKU"		
        case IdType_EAN:
    		return "EAN"		
        case IdType_ISBN:
    		return "ISBN"		
        default:
        	return "ASIN"
    }
}

/**
 * Converts IdTypeEnum Array to its string Array representation
*/
func IdTypeEnumArrayToValue(idTypeEnum []IdTypeEnum) []string {
    convArray := make([]string,len( idTypeEnum))
    for i:=0; i<len(idTypeEnum);i++ {
        convArray[i] = IdTypeEnumToValue(idTypeEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func IdTypeEnumFromValue(value string) IdTypeEnum {
    switch value {
        case "ASIN":
            return IdType_ASIN
        case "UPC":
            return IdType_UPC
        case "SKU":
            return IdType_SKU
        case "EAN":
            return IdType_EAN
        case "ISBN":
            return IdType_ISBN
        default:
            return IdType_ASIN
    }
}
