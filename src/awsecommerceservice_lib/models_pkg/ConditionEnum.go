/*
 * awsecommerceservice_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for ConditionEnum enum
 */
type ConditionEnum int

/**
 * Value collection for ConditionEnum enum
 */
const (
    Condition_ALL ConditionEnum = 1 + iota
    Condition_NEW
    Condition_USED
    Condition_COLLECTIBLE
    Condition_REFURBISHED
)

func (r ConditionEnum) MarshalJSON() ([]byte, error) { 
    s := ConditionEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *ConditionEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  ConditionEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts ConditionEnum to its string representation
 */
func ConditionEnumToValue(conditionEnum ConditionEnum) string {
    switch conditionEnum {
        case Condition_ALL:
    		return "All"		
        case Condition_NEW:
    		return "New"		
        case Condition_USED:
    		return "Used"		
        case Condition_COLLECTIBLE:
    		return "Collectible"		
        case Condition_REFURBISHED:
    		return "Refurbished"		
        default:
        	return "All"
    }
}

/**
 * Converts ConditionEnum Array to its string Array representation
*/
func ConditionEnumArrayToValue(conditionEnum []ConditionEnum) []string {
    convArray := make([]string,len( conditionEnum))
    for i:=0; i<len(conditionEnum);i++ {
        convArray[i] = ConditionEnumToValue(conditionEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func ConditionEnumFromValue(value string) ConditionEnum {
    switch value {
        case "All":
            return Condition_ALL
        case "New":
            return Condition_NEW
        case "Used":
            return Condition_USED
        case "Collectible":
            return Condition_COLLECTIBLE
        case "Refurbished":
            return Condition_REFURBISHED
        default:
            return Condition_ALL
    }
}
