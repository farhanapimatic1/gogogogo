/*
 * AWSECommerceServiceLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.amazon.webservices.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class ItemAttributes 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 5544378101529135922L;
    private List<String> actor;
    private List<String> artist;
    private String aspectRatio;
    private AudienceRatingEnum audienceRating;
    private List<String> audioFormat;
    private List<String> author;
    private String binding;
    private String brand;
    private CatalogNumberList catalogNumberList;
    private List<String> category;
    private String cEROAgeRating;
    private String clothingSize;
    private String color;
    private List<Creator> creator;
    private String department;
    private List<String> director;
    private String eAN;
    private EANList eANList;
    private String edition;
    private List<String> eISBN;
    private String energyEfficiencyClass;
    private String episodeSequence;
    private String eSRBAgeRating;
    private List<String> feature;
    private List<String> format;
    private String genre;
    private String hardwarePlatform;
    private String hazardousMaterialType;
    private Boolean isAdultProduct;
    private Boolean isAutographed;
    private String iSBN;
    private Boolean isEligibleForTradeIn;
    private Boolean isMemorabilia;
    private String issuesPerYear;
    private ItemDimensions itemDimensions;
    private String itemPartNumber;
    private String label;
    private Languages languages;
    private String legalDisclaimer;
    private Price listPrice;
    private String magazineType;
    private String manufacturer;
    private DecimalWithUnits manufacturerMaximumAge;
    private DecimalWithUnits manufacturerMinimumAge;
    private String manufacturerPartsWarrantyDescription;
    private String mediaType;
    private String model;
    private Integer modelYear;
    private String mPN;
    private Integer numberOfDiscs;
    private Integer numberOfIssues;
    private Integer numberOfItems;
    private Integer numberOfPages;
    private Integer numberOfTracks;
    private String operatingSystem;
    private PackageDimensions packageDimensions;
    private Integer packageQuantity;
    private String partNumber;
    private List<String> pictureFormat;
    private List<String> platform;
    private String productGroup;
    private String productTypeName;
    private String productTypeSubcategory;
    private String publicationDate;
    private String publisher;
    private String regionCode;
    private String releaseDate;
    private String seasonSequence;
    private DecimalWithUnits runningTime;
    private String seikodoProductCode;
    private String size;
    private String sKU;
    private String studio;
    private NonNegativeIntegerWithUnits subscriptionLength;
    private String title;
    private String trackSequence;
    private Price tradeInValue;
    private String uPC;
    private UPCList uPCList;
    private String warranty;
    private Price wEEETaxValue;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Actor")
    public List<String> getActor ( ) { 
        return this.actor;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Actor")
    public void setActor (List<String> value) { 
        this.actor = value;
        notifyObservers(this.actor);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Artist")
    public List<String> getArtist ( ) { 
        return this.artist;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Artist")
    public void setArtist (List<String> value) { 
        this.artist = value;
        notifyObservers(this.artist);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("AspectRatio")
    public String getAspectRatio ( ) { 
        return this.aspectRatio;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("AspectRatio")
    public void setAspectRatio (String value) { 
        this.aspectRatio = value;
        notifyObservers(this.aspectRatio);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("AudienceRating")
    public AudienceRatingEnum getAudienceRating ( ) { 
        return this.audienceRating;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("AudienceRating")
    public void setAudienceRating (AudienceRatingEnum value) { 
        this.audienceRating = value;
        notifyObservers(this.audienceRating);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("AudioFormat")
    public List<String> getAudioFormat ( ) { 
        return this.audioFormat;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("AudioFormat")
    public void setAudioFormat (List<String> value) { 
        this.audioFormat = value;
        notifyObservers(this.audioFormat);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Author")
    public List<String> getAuthor ( ) { 
        return this.author;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Author")
    public void setAuthor (List<String> value) { 
        this.author = value;
        notifyObservers(this.author);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Binding")
    public String getBinding ( ) { 
        return this.binding;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Binding")
    public void setBinding (String value) { 
        this.binding = value;
        notifyObservers(this.binding);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Brand")
    public String getBrand ( ) { 
        return this.brand;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Brand")
    public void setBrand (String value) { 
        this.brand = value;
        notifyObservers(this.brand);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("CatalogNumberList")
    public CatalogNumberList getCatalogNumberList ( ) { 
        return this.catalogNumberList;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("CatalogNumberList")
    public void setCatalogNumberList (CatalogNumberList value) { 
        this.catalogNumberList = value;
        notifyObservers(this.catalogNumberList);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Category")
    public List<String> getCategory ( ) { 
        return this.category;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Category")
    public void setCategory (List<String> value) { 
        this.category = value;
        notifyObservers(this.category);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("CEROAgeRating")
    public String getCEROAgeRating ( ) { 
        return this.cEROAgeRating;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("CEROAgeRating")
    public void setCEROAgeRating (String value) { 
        this.cEROAgeRating = value;
        notifyObservers(this.cEROAgeRating);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ClothingSize")
    public String getClothingSize ( ) { 
        return this.clothingSize;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ClothingSize")
    public void setClothingSize (String value) { 
        this.clothingSize = value;
        notifyObservers(this.clothingSize);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Color")
    public String getColor ( ) { 
        return this.color;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Color")
    public void setColor (String value) { 
        this.color = value;
        notifyObservers(this.color);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Creator")
    public List<Creator> getCreator ( ) { 
        return this.creator;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Creator")
    public void setCreator (List<Creator> value) { 
        this.creator = value;
        notifyObservers(this.creator);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Department")
    public String getDepartment ( ) { 
        return this.department;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Department")
    public void setDepartment (String value) { 
        this.department = value;
        notifyObservers(this.department);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Director")
    public List<String> getDirector ( ) { 
        return this.director;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Director")
    public void setDirector (List<String> value) { 
        this.director = value;
        notifyObservers(this.director);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("EAN")
    public String getEAN ( ) { 
        return this.eAN;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("EAN")
    public void setEAN (String value) { 
        this.eAN = value;
        notifyObservers(this.eAN);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("EANList")
    public EANList getEANList ( ) { 
        return this.eANList;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("EANList")
    public void setEANList (EANList value) { 
        this.eANList = value;
        notifyObservers(this.eANList);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Edition")
    public String getEdition ( ) { 
        return this.edition;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Edition")
    public void setEdition (String value) { 
        this.edition = value;
        notifyObservers(this.edition);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("EISBN")
    public List<String> getEISBN ( ) { 
        return this.eISBN;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("EISBN")
    public void setEISBN (List<String> value) { 
        this.eISBN = value;
        notifyObservers(this.eISBN);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("EnergyEfficiencyClass")
    public String getEnergyEfficiencyClass ( ) { 
        return this.energyEfficiencyClass;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("EnergyEfficiencyClass")
    public void setEnergyEfficiencyClass (String value) { 
        this.energyEfficiencyClass = value;
        notifyObservers(this.energyEfficiencyClass);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("EpisodeSequence")
    public String getEpisodeSequence ( ) { 
        return this.episodeSequence;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("EpisodeSequence")
    public void setEpisodeSequence (String value) { 
        this.episodeSequence = value;
        notifyObservers(this.episodeSequence);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ESRBAgeRating")
    public String getESRBAgeRating ( ) { 
        return this.eSRBAgeRating;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ESRBAgeRating")
    public void setESRBAgeRating (String value) { 
        this.eSRBAgeRating = value;
        notifyObservers(this.eSRBAgeRating);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Feature")
    public List<String> getFeature ( ) { 
        return this.feature;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Feature")
    public void setFeature (List<String> value) { 
        this.feature = value;
        notifyObservers(this.feature);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Format")
    public List<String> getFormat ( ) { 
        return this.format;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Format")
    public void setFormat (List<String> value) { 
        this.format = value;
        notifyObservers(this.format);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Genre")
    public String getGenre ( ) { 
        return this.genre;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Genre")
    public void setGenre (String value) { 
        this.genre = value;
        notifyObservers(this.genre);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("HardwarePlatform")
    public String getHardwarePlatform ( ) { 
        return this.hardwarePlatform;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("HardwarePlatform")
    public void setHardwarePlatform (String value) { 
        this.hardwarePlatform = value;
        notifyObservers(this.hardwarePlatform);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("HazardousMaterialType")
    public String getHazardousMaterialType ( ) { 
        return this.hazardousMaterialType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("HazardousMaterialType")
    public void setHazardousMaterialType (String value) { 
        this.hazardousMaterialType = value;
        notifyObservers(this.hazardousMaterialType);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("IsAdultProduct")
    public Boolean getIsAdultProduct ( ) { 
        return this.isAdultProduct;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("IsAdultProduct")
    public void setIsAdultProduct (Boolean value) { 
        this.isAdultProduct = value;
        notifyObservers(this.isAdultProduct);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("IsAutographed")
    public Boolean getIsAutographed ( ) { 
        return this.isAutographed;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("IsAutographed")
    public void setIsAutographed (Boolean value) { 
        this.isAutographed = value;
        notifyObservers(this.isAutographed);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ISBN")
    public String getISBN ( ) { 
        return this.iSBN;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ISBN")
    public void setISBN (String value) { 
        this.iSBN = value;
        notifyObservers(this.iSBN);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("IsEligibleForTradeIn")
    public Boolean getIsEligibleForTradeIn ( ) { 
        return this.isEligibleForTradeIn;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("IsEligibleForTradeIn")
    public void setIsEligibleForTradeIn (Boolean value) { 
        this.isEligibleForTradeIn = value;
        notifyObservers(this.isEligibleForTradeIn);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("IsMemorabilia")
    public Boolean getIsMemorabilia ( ) { 
        return this.isMemorabilia;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("IsMemorabilia")
    public void setIsMemorabilia (Boolean value) { 
        this.isMemorabilia = value;
        notifyObservers(this.isMemorabilia);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("IssuesPerYear")
    public String getIssuesPerYear ( ) { 
        return this.issuesPerYear;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("IssuesPerYear")
    public void setIssuesPerYear (String value) { 
        this.issuesPerYear = value;
        notifyObservers(this.issuesPerYear);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ItemDimensions")
    public ItemDimensions getItemDimensions ( ) { 
        return this.itemDimensions;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ItemDimensions")
    public void setItemDimensions (ItemDimensions value) { 
        this.itemDimensions = value;
        notifyObservers(this.itemDimensions);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ItemPartNumber")
    public String getItemPartNumber ( ) { 
        return this.itemPartNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ItemPartNumber")
    public void setItemPartNumber (String value) { 
        this.itemPartNumber = value;
        notifyObservers(this.itemPartNumber);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Label")
    public String getLabel ( ) { 
        return this.label;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Label")
    public void setLabel (String value) { 
        this.label = value;
        notifyObservers(this.label);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Languages")
    public Languages getLanguages ( ) { 
        return this.languages;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Languages")
    public void setLanguages (Languages value) { 
        this.languages = value;
        notifyObservers(this.languages);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("LegalDisclaimer")
    public String getLegalDisclaimer ( ) { 
        return this.legalDisclaimer;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("LegalDisclaimer")
    public void setLegalDisclaimer (String value) { 
        this.legalDisclaimer = value;
        notifyObservers(this.legalDisclaimer);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ListPrice")
    public Price getListPrice ( ) { 
        return this.listPrice;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ListPrice")
    public void setListPrice (Price value) { 
        this.listPrice = value;
        notifyObservers(this.listPrice);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("MagazineType")
    public String getMagazineType ( ) { 
        return this.magazineType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("MagazineType")
    public void setMagazineType (String value) { 
        this.magazineType = value;
        notifyObservers(this.magazineType);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Manufacturer")
    public String getManufacturer ( ) { 
        return this.manufacturer;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Manufacturer")
    public void setManufacturer (String value) { 
        this.manufacturer = value;
        notifyObservers(this.manufacturer);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ManufacturerMaximumAge")
    public DecimalWithUnits getManufacturerMaximumAge ( ) { 
        return this.manufacturerMaximumAge;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ManufacturerMaximumAge")
    public void setManufacturerMaximumAge (DecimalWithUnits value) { 
        this.manufacturerMaximumAge = value;
        notifyObservers(this.manufacturerMaximumAge);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ManufacturerMinimumAge")
    public DecimalWithUnits getManufacturerMinimumAge ( ) { 
        return this.manufacturerMinimumAge;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ManufacturerMinimumAge")
    public void setManufacturerMinimumAge (DecimalWithUnits value) { 
        this.manufacturerMinimumAge = value;
        notifyObservers(this.manufacturerMinimumAge);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ManufacturerPartsWarrantyDescription")
    public String getManufacturerPartsWarrantyDescription ( ) { 
        return this.manufacturerPartsWarrantyDescription;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ManufacturerPartsWarrantyDescription")
    public void setManufacturerPartsWarrantyDescription (String value) { 
        this.manufacturerPartsWarrantyDescription = value;
        notifyObservers(this.manufacturerPartsWarrantyDescription);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("MediaType")
    public String getMediaType ( ) { 
        return this.mediaType;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("MediaType")
    public void setMediaType (String value) { 
        this.mediaType = value;
        notifyObservers(this.mediaType);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Model")
    public String getModel ( ) { 
        return this.model;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Model")
    public void setModel (String value) { 
        this.model = value;
        notifyObservers(this.model);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ModelYear")
    public Integer getModelYear ( ) { 
        return this.modelYear;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ModelYear")
    public void setModelYear (Integer value) { 
        this.modelYear = value;
        notifyObservers(this.modelYear);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("MPN")
    public String getMPN ( ) { 
        return this.mPN;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("MPN")
    public void setMPN (String value) { 
        this.mPN = value;
        notifyObservers(this.mPN);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("NumberOfDiscs")
    public Integer getNumberOfDiscs ( ) { 
        return this.numberOfDiscs;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("NumberOfDiscs")
    public void setNumberOfDiscs (Integer value) { 
        this.numberOfDiscs = value;
        notifyObservers(this.numberOfDiscs);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("NumberOfIssues")
    public Integer getNumberOfIssues ( ) { 
        return this.numberOfIssues;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("NumberOfIssues")
    public void setNumberOfIssues (Integer value) { 
        this.numberOfIssues = value;
        notifyObservers(this.numberOfIssues);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("NumberOfItems")
    public Integer getNumberOfItems ( ) { 
        return this.numberOfItems;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("NumberOfItems")
    public void setNumberOfItems (Integer value) { 
        this.numberOfItems = value;
        notifyObservers(this.numberOfItems);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("NumberOfPages")
    public Integer getNumberOfPages ( ) { 
        return this.numberOfPages;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("NumberOfPages")
    public void setNumberOfPages (Integer value) { 
        this.numberOfPages = value;
        notifyObservers(this.numberOfPages);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("NumberOfTracks")
    public Integer getNumberOfTracks ( ) { 
        return this.numberOfTracks;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("NumberOfTracks")
    public void setNumberOfTracks (Integer value) { 
        this.numberOfTracks = value;
        notifyObservers(this.numberOfTracks);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("OperatingSystem")
    public String getOperatingSystem ( ) { 
        return this.operatingSystem;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("OperatingSystem")
    public void setOperatingSystem (String value) { 
        this.operatingSystem = value;
        notifyObservers(this.operatingSystem);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("PackageDimensions")
    public PackageDimensions getPackageDimensions ( ) { 
        return this.packageDimensions;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("PackageDimensions")
    public void setPackageDimensions (PackageDimensions value) { 
        this.packageDimensions = value;
        notifyObservers(this.packageDimensions);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("PackageQuantity")
    public Integer getPackageQuantity ( ) { 
        return this.packageQuantity;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("PackageQuantity")
    public void setPackageQuantity (Integer value) { 
        this.packageQuantity = value;
        notifyObservers(this.packageQuantity);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("PartNumber")
    public String getPartNumber ( ) { 
        return this.partNumber;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("PartNumber")
    public void setPartNumber (String value) { 
        this.partNumber = value;
        notifyObservers(this.partNumber);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("PictureFormat")
    public List<String> getPictureFormat ( ) { 
        return this.pictureFormat;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("PictureFormat")
    public void setPictureFormat (List<String> value) { 
        this.pictureFormat = value;
        notifyObservers(this.pictureFormat);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Platform")
    public List<String> getPlatform ( ) { 
        return this.platform;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Platform")
    public void setPlatform (List<String> value) { 
        this.platform = value;
        notifyObservers(this.platform);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ProductGroup")
    public String getProductGroup ( ) { 
        return this.productGroup;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ProductGroup")
    public void setProductGroup (String value) { 
        this.productGroup = value;
        notifyObservers(this.productGroup);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ProductTypeName")
    public String getProductTypeName ( ) { 
        return this.productTypeName;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ProductTypeName")
    public void setProductTypeName (String value) { 
        this.productTypeName = value;
        notifyObservers(this.productTypeName);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ProductTypeSubcategory")
    public String getProductTypeSubcategory ( ) { 
        return this.productTypeSubcategory;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ProductTypeSubcategory")
    public void setProductTypeSubcategory (String value) { 
        this.productTypeSubcategory = value;
        notifyObservers(this.productTypeSubcategory);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("PublicationDate")
    public String getPublicationDate ( ) { 
        return this.publicationDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("PublicationDate")
    public void setPublicationDate (String value) { 
        this.publicationDate = value;
        notifyObservers(this.publicationDate);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Publisher")
    public String getPublisher ( ) { 
        return this.publisher;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Publisher")
    public void setPublisher (String value) { 
        this.publisher = value;
        notifyObservers(this.publisher);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("RegionCode")
    public String getRegionCode ( ) { 
        return this.regionCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("RegionCode")
    public void setRegionCode (String value) { 
        this.regionCode = value;
        notifyObservers(this.regionCode);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("ReleaseDate")
    public String getReleaseDate ( ) { 
        return this.releaseDate;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("ReleaseDate")
    public void setReleaseDate (String value) { 
        this.releaseDate = value;
        notifyObservers(this.releaseDate);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("SeasonSequence")
    public String getSeasonSequence ( ) { 
        return this.seasonSequence;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("SeasonSequence")
    public void setSeasonSequence (String value) { 
        this.seasonSequence = value;
        notifyObservers(this.seasonSequence);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("RunningTime")
    public DecimalWithUnits getRunningTime ( ) { 
        return this.runningTime;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("RunningTime")
    public void setRunningTime (DecimalWithUnits value) { 
        this.runningTime = value;
        notifyObservers(this.runningTime);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("SeikodoProductCode")
    public String getSeikodoProductCode ( ) { 
        return this.seikodoProductCode;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("SeikodoProductCode")
    public void setSeikodoProductCode (String value) { 
        this.seikodoProductCode = value;
        notifyObservers(this.seikodoProductCode);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Size")
    public String getSize ( ) { 
        return this.size;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Size")
    public void setSize (String value) { 
        this.size = value;
        notifyObservers(this.size);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("SKU")
    public String getSKU ( ) { 
        return this.sKU;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("SKU")
    public void setSKU (String value) { 
        this.sKU = value;
        notifyObservers(this.sKU);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Studio")
    public String getStudio ( ) { 
        return this.studio;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Studio")
    public void setStudio (String value) { 
        this.studio = value;
        notifyObservers(this.studio);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("SubscriptionLength")
    public NonNegativeIntegerWithUnits getSubscriptionLength ( ) { 
        return this.subscriptionLength;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("SubscriptionLength")
    public void setSubscriptionLength (NonNegativeIntegerWithUnits value) { 
        this.subscriptionLength = value;
        notifyObservers(this.subscriptionLength);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Title")
    public String getTitle ( ) { 
        return this.title;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Title")
    public void setTitle (String value) { 
        this.title = value;
        notifyObservers(this.title);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("TrackSequence")
    public String getTrackSequence ( ) { 
        return this.trackSequence;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("TrackSequence")
    public void setTrackSequence (String value) { 
        this.trackSequence = value;
        notifyObservers(this.trackSequence);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("TradeInValue")
    public Price getTradeInValue ( ) { 
        return this.tradeInValue;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("TradeInValue")
    public void setTradeInValue (Price value) { 
        this.tradeInValue = value;
        notifyObservers(this.tradeInValue);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("UPC")
    public String getUPC ( ) { 
        return this.uPC;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("UPC")
    public void setUPC (String value) { 
        this.uPC = value;
        notifyObservers(this.uPC);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("UPCList")
    public UPCList getUPCList ( ) { 
        return this.uPCList;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("UPCList")
    public void setUPCList (UPCList value) { 
        this.uPCList = value;
        notifyObservers(this.uPCList);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("Warranty")
    public String getWarranty ( ) { 
        return this.warranty;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("Warranty")
    public void setWarranty (String value) { 
        this.warranty = value;
        notifyObservers(this.warranty);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("WEEETaxValue")
    public Price getWEEETaxValue ( ) { 
        return this.wEEETaxValue;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("WEEETaxValue")
    public void setWEEETaxValue (Price value) { 
        this.wEEETaxValue = value;
        notifyObservers(this.wEEETaxValue);
    }
 
}
 